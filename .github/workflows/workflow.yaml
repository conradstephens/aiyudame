name: "Terraform CI"

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
        shell: bash
        working-directory: ./server/terraform

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: terraform init
        env:
          TF_VAR_GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

      # Checks that all Terraform configuration files adhere to a canonical format
      - name: Terraform Format
        run: terraform fmt -check

      # Generates an execution plan for Terraform
      - name: Terraform Plan
        run: |
          if [ ${{ github.ref }} != 'refs/heads/main' ]; then
            echo terraform plan -target=google_cloud_run_v2_service.aiyudame-server-dev -input=false
          elif [ ${{ github.ref }} == 'refs/heads/main' && ${{ github.event_name }} == 'push' ]; then
            echo terraform plan -target=google_cloud_run_v2_service.aiyudame-server-prod -input=false
          fi
        env:
          TF_VAR_GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

      # - name: Terraform Apply Dev
      #   if: github.ref != 'refs/heads/main'
      #   run: terraform apply -target=google_cloud_run_v2_service.aiyudame-server-dev -auto-approve -input=false
      #   env:
      #     TF_VAR_GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
      # On push to "main", build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
      - name: Terraform Apply
        run: |
          if [ ${{ github.ref }} != 'refs/heads/main' ]; then
            echo terraform apply -target=google_cloud_run_v2_service.aiyudame-server-dev -auto-approve -input=false
          elif [ ${{ github.ref }} == 'refs/heads/main' && ${{ github.event_name }} == 'push' ]; then
            echo terraform apply -target=google_cloud_run_v2_service.aiyudame-server-prod -auto-approve -input=false
          fi
        env:
          TF_VAR_GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        # if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        # run: terraform apply -target=google_cloud_run_v2_service.aiyudame-server-prod -auto-approve -input=false
        # env:
        #   TF_VAR_GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
